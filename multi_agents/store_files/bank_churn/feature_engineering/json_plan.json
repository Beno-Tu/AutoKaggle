[
    {
        "task": "Create New Features Based on Insights from In-depth EDA",
        "tools, involved features and correct parameters": [
            {
                "tool": "pd.cut()",
                "involved_features": [
                    "Age"
                ],
                "parameters": "Bins such as 'Young' (18-30), 'Middle-aged' (31-50), and 'Senior' (51+)"
            },
            {
                "tool": "np.where()",
                "involved_features": [
                    "Balance"
                ],
                "parameters": "Binary feature indicating whether the balance is positive"
            },
            {
                "tool": "Custom function using pd.DataFrame.apply()",
                "involved_features": [
                    "Geography",
                    "Balance"
                ],
                "parameters": "Combine Geography and Balance"
            },
            {
                "tool": "np.where()",
                "involved_features": [
                    "HasCrCard",
                    "IsActiveMember"
                ],
                "parameters": "Binary feature indicating if both HasCrCard and IsActiveMember are 1"
            }
        ],
        "expected output or impact on data": [
            "New categorical feature AgeGroup",
            "New binary feature HasBalance",
            "New feature Region_Balance_Interaction",
            "New binary feature Active_Card_User"
        ],
        "constraints": [
            "Ensure logical binning criteria",
            "Maintain interpretability of new features"
        ]
    },
    {
        "task": "Transform Existing Features to Improve Model Performance",
        "tools, involved features and correct parameters": [
            {
                "tool": "MinMaxScaler from sklearn.preprocessing",
                "involved_features": [
                    "CreditScore"
                ],
                "parameters": "Normalize to a 0-1 range"
            },
            {
                "tool": "np.log1p()",
                "involved_features": [
                    "EstimatedSalary"
                ],
                "parameters": "Apply logarithmic transformation"
            }
        ],
        "expected output or impact on data": [
            "Transformed CreditScore",
            "Transformed EstimatedSalary"
        ],
        "constraints": [
            "Handle zero or negative values in EstimatedSalary",
            "Ensure consistent transformations across train and test datasets"
        ]
    },
    {
        "task": "Handle Categorical Variables",
        "tools, involved features and correct parameters": [
            {
                "tool": "pd.get_dummies()",
                "involved_features": [
                    "Geography"
                ],
                "parameters": "Convert Geography into binary variables"
            },
            {
                "tool": "LabelEncoder from sklearn.preprocessing",
                "involved_features": [
                    "Gender"
                ],
                "parameters": "Convert Gender to binary (0 for Female, 1 for Male)"
            }
        ],
        "expected output or impact on data": [
            "New binary features for each category in Geography",
            "Binary feature Gender"
        ],
        "constraints": [
            "Avoid dummy variable trap (drop one category if necessary)",
            "Ensure encoding consistency across train and test datasets"
        ]
    },
    {
        "task": "Normalize or Standardize Numerical Features",
        "tools, involved features and correct parameters": [
            {
                "tool": "StandardScaler from sklearn.preprocessing",
                "involved_features": [
                    "Age"
                ],
                "parameters": "Standardize to mean 0 and standard deviation 1"
            },
            {
                "tool": "StandardScaler from sklearn.preprocessing",
                "involved_features": [
                    "Balance"
                ],
                "parameters": "Standardize to mean 0 and standard deviation 1"
            }
        ],
        "expected output or impact on data": [
            "Standardized Age",
            "Standardized Balance"
        ],
        "constraints": [
            "Ensure numerical features are on a similar scale",
            "Maintain reproducibility of transformations"
        ]
    }
]