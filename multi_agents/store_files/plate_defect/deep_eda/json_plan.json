[
    {
        "task": "Conduct Thorough Statistical Analysis on Cleaned Data",
        "tools, involved features and correct parameters": [
            "Use pandas' `describe()` method for descriptive statistics.",
            "Use pandas' `value_counts()` for categorical features.",
            "Compute correlation matrix using pandas' `corr()`.",
            "Visualize correlation matrix using seaborn's `heatmap()`.",
            "Features Involved: All numerical and categorical features."
        ],
        "expected output or impact on data": [
            "Summary statistics for numerical features.",
            "Frequency distribution for categorical features.",
            "Correlation matrix and heatmap visualization."
        ],
        "constraints": [
            "Ensure no modifications to the dataset, only analysis.",
            "Limit the image generation to one heatmap for efficiency."
        ]
    },
    {
        "task": "Explore Relationships Between Features and Target Variables",
        "tools, involved features and correct parameters": [
            "Plot histograms and boxplots for numerical features, stratified by target variables using Matplotlib and Seaborn.",
            "Use count plots for categorical features, stratified by target variables.",
            "Perform pairwise scatter plots for numerical features against target variables using Seaborn's pairplot or scatterplot with hue.",
            "Features Involved: All numerical and categorical features."
        ],
        "expected output or impact on data": [
            "Histograms, boxplots, and count plots showing distributions and potential correlations.",
            "Scatter plots highlighting relationships between features and target variables."
        ],
        "constraints": [
            "Limit generated images to a maximum of 10, focusing on key features and target variables with the most variance.",
            "Ensure efficient plotting, avoid overloading with too many plots."
        ]
    },
    {
        "task": "Identify Potential Feature Interactions",
        "tools, involved features and correct parameters": [
            "Create interaction plots for pairs of features using Seaborn's `lmplot()` or `interaction_plot()` from statsmodels.",
            "Perform cross-tabulation for categorical features using pandas' `crosstab()`.",
            "Features Involved: Selected pairs of numerical features and categorical features."
        ],
        "expected output or impact on data": [
            "Interaction plots showing potential feature interactions.",
            "Cross-tabulation tables showing interaction frequencies."
        ],
        "constraints": [
            "Focus on key interactions that show significant variance.",
            "Keep tables concise and focused on significant interactions."
        ]
    },
    {
        "task": "Visualize Key Insights and Patterns",
        "tools, involved features and correct parameters": [
            "Create summary plots using bar plots, line plots, or heatmaps as needed with Matplotlib and Seaborn.",
            "Provide recommendations for potential feature engineering steps.",
            "Features Involved: All key features identified from previous tasks."
        ],
        "expected output or impact on data": [
            "Summary visualizations showing key patterns and insights.",
            "A list of actionable recommendations for feature engineering."
        ],
        "constraints": [
            "Ensure clarity and avoid redundancy in visualizations.",
            "Focus on practical and impactful feature engineering steps."
        ]
    }
]